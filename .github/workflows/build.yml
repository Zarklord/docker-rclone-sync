name: ci

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

env:
  DOCKERHUB_BASE: zarklord/
  GHCR_BASE: ghcr.io/zarklord/

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.platforms.outputs.targets }}
      platforms: ${{ steps.platforms.outputs.platforms }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create matrix
        id: platforms
        run: |
          echo "targets=$(docker buildx bake ci_targets --print | jq -cr '.group."ci_targets".targets')" >>${GITHUB_OUTPUT}
          echo "platforms=$(docker buildx bake ci_platforms --print | jq -cr '.target."ci_platforms".platforms')" >>${GITHUB_OUTPUT}
      
      - name: Show matrix
        run: |
          echo targets: ${{ steps.platforms.outputs.targets }}
          echo platforms: ${{ steps.platforms.outputs.platforms }}
      
  metadata:
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_BASE }}${{ matrix.target }}
            ${{ env.GHCR_BASE }}${{ matrix.target }}
          tags: |
            type=match,pattern=v(.*),group=1
            type=edge
      
      - name: Rename meta bake definition file
        run: |
          mv "${{ steps.meta.outputs.bake-file }}" "/tmp/bake-meta.json"
      
      - name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: bake-meta-${{ matrix.target }}
          path: /tmp/bake-meta.json
          if-no-files-found: error
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - metadata
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
        platform: ${{ fromJson(needs.prepare.outputs.platforms) }}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta-${{ matrix.target }}
          path: /tmp
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      
      - name: Build
        id: bake
        uses: docker/bake-action@v5
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          files: |
            ./docker-bake.hcl
            /tmp/bake-meta.json
          targets: ${{ matrix.target }}
          set: |
            *.tags=
            *.platform=${{ matrix.platform }}
            *.output=type=image,"name=${{ env.DOCKERHUB_BASE }}${{ matrix.target }},${{ env.GHCR_BASE }}${{ matrix.target }}",push-by-digest=true,name-canonical=true,push=true
      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ fromJSON(steps.bake.outputs.metadata)[matrix.target]['containerimage.digest'] }}"
          touch "/tmp/digests/${digest#sha256:}"
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.target }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta-${{ matrix.target }}
          path: /tmp
      
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.target }}-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.target."docker-metadata-action".tags | map(select(startswith("${{ env.DOCKERHUB_BASE }}${{ matrix.target }}")) | "-t " + .) | join(" ")' /tmp/bake-meta.json) \
            $(printf '${{ env.DOCKERHUB_BASE }}${{ matrix.target }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.target."docker-metadata-action".tags | map(select(startswith("${{ env.GHCR_BASE }}${{ matrix.target }}")) | "-t " + .) | join(" ")' /tmp/bake-meta.json) \
            $(printf '${{ env.GHCR_BASE }}${{ matrix.target }}@sha256:%s ' *)
      
      - name: Inspect image
        run: |
          tag=$(jq -r '.target."docker-metadata-action".args.DOCKER_META_VERSION' /tmp/bake-meta.json)
          docker buildx imagetools inspect ${{ env.DOCKERHUB_BASE }}${{ matrix.target }}:${tag}
          docker buildx imagetools inspect ${{ env.GHCR_BASE }}${{ matrix.target }}:${tag}